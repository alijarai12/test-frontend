{"remainingRequest":"/home/alija/Globaly/vue-frontend/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/alija/Globaly/vue-frontend/src/components/TutorialDetails.vue?vue&type=style&index=0&id=eb48bdf8&lang=css","dependencies":[{"path":"/home/alija/Globaly/vue-frontend/src/components/TutorialDetails.vue","mtime":1620003974000},{"path":"/home/alija/Globaly/vue-frontend/node_modules/css-loader/dist/cjs.js","mtime":1746767325749},{"path":"/home/alija/Globaly/vue-frontend/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1746767325820},{"path":"/home/alija/Globaly/vue-frontend/node_modules/postcss-loader/src/index.js","mtime":1746767325749},{"path":"/home/alija/Globaly/vue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1746767326317},{"path":"/home/alija/Globaly/vue-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1746767325743}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lZGl0LWZvcm0gewogIG1heC13aWR0aDogMzAwcHg7CiAgbWFyZ2luOiBhdXRvOwp9Cg=="},{"version":3,"sources":["/home/alija/Globaly/vue-frontend/src/components/TutorialDetails.vue"],"names":[],"mappings":";AAuIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACd","file":"/home/alija/Globaly/vue-frontend/src/components/TutorialDetails.vue","sourceRoot":"","sourcesContent":["<template>\n  <div v-if=\"currentTutorial.id\" class=\"edit-form\">\n    <h4>Tutorial</h4>\n    <form>\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"title\"\n          v-model=\"currentTutorial.title\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"description\"\n          v-model=\"currentTutorial.description\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label><strong>Status:</strong></label>\n        {{ currentTutorial.published ? \"Published\" : \"Pending\" }}\n      </div>\n    </form>\n\n    <button\n      class=\"badge badge-primary mr-2\"\n      v-if=\"currentTutorial.published\"\n      @click=\"updatePublished(false)\"\n    >\n      UnPublish\n    </button>\n    <button\n      v-else\n      class=\"badge badge-primary mr-2\"\n      @click=\"updatePublished(true)\"\n    >\n      Publish\n    </button>\n\n    <button class=\"badge badge-danger mr-2\" @click=\"deleteTutorial\">\n      Delete\n    </button>\n\n    <button type=\"submit\" class=\"badge badge-success\" @click=\"updateTutorial\">\n      Update\n    </button>\n    <p>{{ message }}</p>\n  </div>\n\n  <div v-else>\n    <br />\n    <p>Please click on a Tutorial...</p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport TutorialDataService from \"@/services/TutorialDataService\";\nimport Tutorial from \"@/types/Tutorial\";\nimport ResponseData from \"@/types/ResponseData\";\n\nexport default defineComponent({\n  name: \"tutorial\",\n  data() {\n    return {\n      currentTutorial: {} as Tutorial,\n      message: \"\",\n    };\n  },\n  methods: {\n    getTutorial(id: any) {\n      TutorialDataService.get(id)\n        .then((response: ResponseData) => {\n          this.currentTutorial = response.data;\n          console.log(response.data);\n        })\n        .catch((e: Error) => {\n          console.log(e);\n        });\n    },\n\n    updatePublished(status: boolean) {\n      let data = {\n        id: this.currentTutorial.id,\n        title: this.currentTutorial.title,\n        description: this.currentTutorial.description,\n        published: status,\n      };\n\n      TutorialDataService.update(this.currentTutorial.id, data)\n        .then((response: ResponseData) => {\n          console.log(response.data);\n          this.currentTutorial.published = status;\n          this.message = \"The status was updated successfully!\";\n        })\n        .catch((e: Error) => {\n          console.log(e);\n        });\n    },\n\n    updateTutorial() {\n      TutorialDataService.update(this.currentTutorial.id, this.currentTutorial)\n        .then((response: ResponseData) => {\n          console.log(response.data);\n          this.message = \"The tutorial was updated successfully!\";\n        })\n        .catch((e: Error) => {\n          console.log(e);\n        });\n    },\n\n    deleteTutorial() {\n      TutorialDataService.delete(this.currentTutorial.id)\n        .then((response: ResponseData) => {\n          console.log(response.data);\n          this.$router.push({ name: \"tutorials\" });\n        })\n        .catch((e: Error) => {\n          console.log(e);\n        });\n    },\n  },\n  mounted() {\n    this.message = \"\";\n    this.getTutorial(this.$route.params.id);\n  },\n});\n</script>\n\n<style>\n.edit-form {\n  max-width: 300px;\n  margin: auto;\n}\n</style>\n"]}]}